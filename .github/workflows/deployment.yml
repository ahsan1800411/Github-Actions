# name: Test
# on:
#   push:
# jobs:
#   RunTests:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Get Code
#         uses: actions/checkout@v3
#       - name: Install dependencies
#         run: npm ci
#       - name: Run test
#         run: npm test
#       - name: Expression and Context
#         run: echo "${{toJSON(github)}}"

# deploy:
#   # needs: RunTests   needs commands means when your job depend on some other job to complete first
#   runs-on: ubuntu-latest
#   steps:
#     - name: Get code
#       uses: actions/checkout@v3
#     - name: Install dependencies
#       run: npm ci
#     - name: Build
#       run: npm run build

#     - name: Deploy the app
#       run: echo 'Deploying......'

# # Activity Types

# name: ActivityTypes
# on:
#   # pull_request:
#   #   types:
#   #     - opened
#   #     - closed
#   push:
#     branches:
#       - main
# jobs:
#   RunTests:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Get Code
#         uses: actions/checkout@v3
#       - name: Install dependencies
#         run: npm ci
#       - name: Run test
#         run: npm test
#       - name: Expression and Context
#         run: echo "${{toJSON(github)}}"

# Job Artifacts and Outputs

name: JobArtifacts
on:
  push:
    branches:
      - main
jobs:
  Build:
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{steps.publish.output.script-file}}
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Run test
        run: npm test
      - name: build
        run: npm run build
      - name: Publish JS Filename
        id: publish
        run: find dist/assets/*.js -type f -execdir echo '::set-output name=script-file::{}' ';'
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Dist-files
          path: dist

  deploy:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Get Artifacts
        uses: actions/download-artifact@v3
        with:
          name: Dist-files
      - name: Output Content
        run: ls
      - name: Deploying
        run: echo "Deploying"
